-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.customers
(
    customer_id integer NOT NULL,
    first_name character(32) NOT NULL,
    last_name character(64) NOT NULL,
    address character varying(255) NOT NULL,
    membership_status character(15) NOT NULL,
    member_since date NOT NULL,
    PRIMARY KEY (customer_id)
);

CREATE TABLE IF NOT EXISTS public.book
(
    book_id integer NOT NULL,
    title character varying(255) NOT NULL,
    author character varying(255) NOT NULL,
    genere_id integer NOT NULL,
    price numeric(5) NOT NULL,
    availability_status character(30) NOT NULL,
    PRIMARY KEY (book_id)
);

CREATE TABLE IF NOT EXISTS public.cart
(
    cart_id integer NOT NULL,
    customer_id integer NOT NULL,
    book_id integer NOT NULL,
    quantity numeric NOT NULL,
    "sub-total" numeric NOT NULL,
    PRIMARY KEY (cart_id)
);

CREATE TABLE IF NOT EXISTS public."order"
(
    order_id integer NOT NULL,
    customer_id integer NOT NULL,
    order_number numeric(35) NOT NULL,
    total_amount numeric(10) NOT NULL,
    payment_info character varying(255) NOT NULL,
    order_date date NOT NULL,
    PRIMARY KEY (order_id)
);

CREATE TABLE IF NOT EXISTS public.membership
(
    membership_id integer NOT NULL,
    customer_id integer NOT NULL,
    subscription_level character varying(255) NOT NULL,
    renewal_date date NOT NULL,
    PRIMARY KEY (membership_id)
);

CREATE TABLE IF NOT EXISTS public.recommendation
(
    recommendation_id integer NOT NULL,
    customer_id integer NOT NULL,
    book_id integer NOT NULL,
    recommendation_date date NOT NULL,
    PRIMARY KEY (recommendation_id)
);

CREATE TABLE IF NOT EXISTS public.genre
(
    genere_id integer NOT NULL,
    genre_name character varying(50) NOT NULL,
    PRIMARY KEY (genere_id)
);

CREATE TABLE IF NOT EXISTS public.book_genre
(
    genre_id integer NOT NULL,
    book_id integer NOT NULL
);

CREATE TABLE IF NOT EXISTS public.address
(
    address_id integer NOT NULL,
    customer_id integer NOT NULL,
    street character varying(100) NOT NULL,
    city character varying(50) NOT NULL,
    state character varying(50) NOT NULL,
    country character(50) NOT NULL,
    "ZIP" character varying(8) NOT NULL,
    PRIMARY KEY (address_id)
);

CREATE TABLE IF NOT EXISTS public.inventory
(
    inventory_id integer NOT NULL,
    book_id integer NOT NULL,
    quantity_instock integer NOT NULL,
    PRIMARY KEY (inventory_id)
);

CREATE TABLE IF NOT EXISTS public.employee
(
    employee_id integer NOT NULL,
    first_name character(32) NOT NULL,
    last_name character varying(50) NOT NULL,
    address character varying(100) NOT NULL,
    PRIMARY KEY (employee_id)
);

ALTER TABLE IF EXISTS public.cart
    ADD CONSTRAINT customer_id FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.cart
    ADD CONSTRAINT book_id FOREIGN KEY (book_id)
    REFERENCES public.book (book_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public."order"
    ADD CONSTRAINT customer_id FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.membership
    ADD CONSTRAINT customer_id FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.recommendation
    ADD CONSTRAINT customer_id FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.recommendation
    ADD CONSTRAINT book_id FOREIGN KEY (book_id)
    REFERENCES public.book (book_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.book_genre
    ADD CONSTRAINT genre_id FOREIGN KEY (genre_id)
    REFERENCES public.genre (genere_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.book_genre
    ADD CONSTRAINT book_id FOREIGN KEY (book_id)
    REFERENCES public.book (book_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.address
    ADD CONSTRAINT customer_id FOREIGN KEY (customer_id)
    REFERENCES public.customers (customer_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.inventory
    ADD CONSTRAINT book_id FOREIGN KEY (book_id)
    REFERENCES public.book (book_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;